{"version":3,"sources":["components/layout/titlemenu/titlemenu.js","components/layout/content/values/temp.js","components/layout/content/values/feelslike.js","components/layout/content/values/maxmin.js","components/layout/content/values/humidity.js","components/layout/content/values/description.js","components/layout/content/values/location.js","components/layout/content/values/city.js","components/layout/content/values/country.js","components/layout/content/values/button.js","api/apifetch/apifetch.js","components/layout/content/content.js","components/layout/layout.js","App.js","serviceWorker.js","index.js","api/apifetch/apifetch.module.css","components/layout/titlemenu/titlemenu.module.css","components/layout/content/values/styles/styles.module.css"],"names":["TitleMenu","className","classes","title","top","text","border","instruction","temp","props","boxwrapper","box","size","icon","value","toFixed","feelslike","maxmin","max","min","humidity","description","location","city","country","TextField","cityStyles","id","label","variant","onChange","changed","FormControl","formControl","InputLabel","htmlFor","Select","native","inputProps","name","aria-label","button","locationButton","Button","onClick","clicked","ApiFetch","useState","weatherData","setWeatherData","setCity","setCountry","lat","setLat","lon","setLon","url","setUrl","firstUpdate","useRef","useLayoutEffect","current","a","axios","weatherResult","data","fetchData","useEffect","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","console","log","contentWrapper","bottom","inputBoxes","event","target","valueWrapper","spy","temps","main","feels_like","temp_max","temp_min","weather","sys","Content","Layout","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.bff033bf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport classes from \"./titlemenu.module.css\";\r\nimport Slide from 'react-reveal/Slide';\r\nconst TitleMenu = () => {\r\n  return (\r\n    <div className={classes.title}>\r\n      <Slide top>\r\n      <p className={classes.text}>Weather Grabbr</p>\r\n      <div className={classes.border}></div>\r\n      <p className={classes.instruction}>Enter your city & country <strong>or</strong> press the location button.</p>\r\n      </Slide>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TitleMenu;\r\n","import React from \"react\";\r\nimport classes from \"./styles/styles.module.css\";\r\nimport {FaThermometerHalf} from 'react-icons/fa';\r\nimport {RiCelsiusLine} from 'react-icons/ri';\r\nconst temp = (props) => {\r\n  return (\r\n    \r\n    <div className={classes.boxwrapper}>\r\n    <div className={classes.box}>\r\n    <FaThermometerHalf size='2em' className={classes.icon}/>\r\n      <p className={classes.text}>\r\n        <strong>Current Temperature:</strong>\r\n      </p>\r\n      <div className={classes.value}>\r\n      {props.temp.toFixed(2)} <RiCelsiusLine size=\"1em\"/>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default temp;\r\n","import React from \"react\";\r\nimport classes from \"./styles/styles.module.css\";\r\nimport { MdBubbleChart } from \"react-icons/md\";\r\nimport {RiCelsiusLine} from 'react-icons/ri';\r\nconst feelslike = (props) => {\r\n  return (\r\n    <div className={classes.boxwrapper}>\r\n      <div className={classes.box}>\r\n        <MdBubbleChart size=\"2em\" className={classes.icon} />\r\n        <p className={classes.text}>\r\n          <strong>Feels Like:</strong>\r\n        </p>\r\n        <div className={classes.value}>{props.feelslike.toFixed(2)} <RiCelsiusLine size=\"1em\"/></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default feelslike;\r\n","import React from \"react\";\r\nimport classes from \"./styles/styles.module.css\";\r\nimport {BsArrowUpDown} from 'react-icons/bs';\r\nimport {RiCelsiusLine} from 'react-icons/ri';\r\nconst maxmin = (props) => {\r\n  return (\r\n    <div className={classes.boxwrapper}>\r\n    <div className={classes.box}>\r\n    <BsArrowUpDown size='2em' className={classes.icon}/>\r\n      <p className={classes.text}>\r\n          <strong>Max & Min:</strong>\r\n        </p>\r\n        <div className={classes.value}>\r\n      <div>Max: {props.max.toFixed(2)} <RiCelsiusLine size=\"1em\"/></div>\r\n      <div>Min: {props.min.toFixed(2)} <RiCelsiusLine size=\"1em\"/></div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default maxmin;\r\n","import React from \"react\";\r\nimport classes from \"./styles/styles.module.css\";\r\nimport {WiHumidity} from 'react-icons/wi';\r\nconst humidity = (props) => {\r\n  return (\r\n    <div className={classes.boxwrapper}>\r\n      <div className={classes.box}>\r\n          <WiHumidity size='2em' className={classes.icon}/>\r\n        <p className={classes.text}>\r\n          <strong>Humidity:</strong>\r\n        </p>\r\n        <div className={classes.value}>\r\n        {props.humidity}%\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default humidity;\r\n","import React from \"react\";\r\nimport classes from \"./styles/styles.module.css\";\r\nimport {GiLookAt} from 'react-icons/gi';\r\nconst description = (props) => {\r\n  return (\r\n    <div className={classes.boxwrapper}>\r\n      <div className={classes.box}>\r\n      <GiLookAt size='2em' className={classes.icon}/>\r\n        <p className={classes.text}>\r\n          <strong>Looks:</strong>\r\n        </p>\r\n        <div className={classes.value}>\r\n        {props.description}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default description;\r\n","import React from \"react\";\r\nimport classes from \"./styles/styles.module.css\";\r\nimport {GrMapLocation} from 'react-icons/gr';\r\nconst location = (props) => {\r\n  return (\r\n    <div className={classes.boxwrapper}>\r\n      <div className={classes.box}>\r\n      <GrMapLocation size='2em' className={classes.icon}/>\r\n        <p className={classes.text}>\r\n          <strong>Location:</strong>\r\n        </p>\r\n        <div className={classes.value}>\r\n        {props.city}, {props.country}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default location;\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport classes from \"./styles/styles.module.css\";\r\nconst city = (props) => {\r\n  return (\r\n    <span className={classes.city}>\r\n      <TextField\r\n      className={classes.cityStyles}\r\n        id=\"outlined-basic\"\r\n        label=\"City\"\r\n        variant=\"outlined\"\r\n        onChange={props.changed}\r\n      />\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default city;\r\n","import React from \"react\";\r\nimport Select from '@material-ui/core/Select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport classes from './styles/styles.module.css';\r\nconst country = (props) => {\r\n  \r\n  return (\r\n    <span className={classes.country}>\r\n      <FormControl variant=\"outlined\" className={classes.formControl}>\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Country</InputLabel>\r\n        <Select\r\n          native\r\n          onChange={props.changed}\r\n          label=\"Country\"\r\n          inputProps={{\r\n            name: 'country',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option value=\"CA\">Canada</option>\r\n          <option value=\"US\">USA</option>\r\n        </Select>\r\n      </FormControl>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default country;\r\n","import React from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport GpsFixedIcon from '@material-ui/icons/GpsFixed';\r\nimport classes from './styles/styles.module.css'\r\nconst button = (props) => {\r\n  return (\r\n    <div className={classes.locationButton}>\r\n       <Button className={classes.button} variant=\"outlined\" onClick={props.clicked}><GpsFixedIcon/></Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default button;\r\n","import React, { useState, useEffect, useRef, useLayoutEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Temp from \"../../components/layout/content/values/temp\";\r\nimport FeelsLike from \"../../components/layout/content/values/feelslike\";\r\nimport MaxMin from \"../../components/layout/content/values/maxmin\";\r\nimport Humidity from \"../../components/layout/content/values/humidity\";\r\nimport Description from \"../../components/layout/content/values/description\";\r\nimport Location from \"../../components/layout/content/values/location\";\r\nimport City from \"../../components/layout/content/values/city\";\r\nimport Country from \"../../components/layout/content/values/country\";\r\nimport Button from \"../../components/layout/content/values/button\";\r\nimport classes from \"./apifetch.module.css\";\r\nimport Slide from \"react-reveal/Slide\";\r\nimport Fade from \"react-reveal/Flip\";\r\n\r\nfunction ApiFetch() {\r\n  const [weatherData, setWeatherData] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [lat, setLat] = useState(0);\r\n  const [lon, setLon] = useState(0);\r\n  const [url, setUrl] = useState(\r\n    `http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=220b8775efd1ba31288e8e381b672250`\r\n  );\r\n  const firstUpdate = useRef(true);\r\n  useLayoutEffect(() => {\r\n    if (firstUpdate.current) {\r\n      firstUpdate.current = false;\r\n      return;\r\n    }\r\n    const fetchData = async () => {\r\n      const weatherResult = await axios(url);\r\n      setWeatherData(weatherResult.data);\r\n    };\r\n    fetchData();\r\n  }, [url]);\r\n\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(function (position) {\r\n      setLat(position.coords.latitude);\r\n      setLon(position.coords.longitude);\r\n      console.log(weatherData);\r\n    });\r\n  }, [weatherData]);\r\n\r\n  useEffect(() => {\r\n    if (city && country !== \"\") {\r\n      setUrl(\r\n        //hi\r\n        `http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=220b8775efd1ba31288e8e381b672250`\r\n      );\r\n    }\r\n  }, [city, country]);\r\n\r\n  const locationSetter = () => {\r\n    setUrl(\r\n      `http://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=220b8775efd1ba31288e8e381b672250`\r\n    );\r\n  };\r\n  return (\r\n    <div className={classes.contentWrapper}>\r\n      <Slide bottom>\r\n        <div className={classes.inputBoxes}>\r\n          <City changed={(event) => setCity(event.target.value)} />\r\n          <Country changed={(event) => setCountry(event.target.value)} />\r\n          <Button clicked={locationSetter} name={\"Get Location\"} />\r\n        </div>\r\n      </Slide>\r\n\r\n      <div className={classes.valueWrapper}>\r\n      <Fade top spy={url}>\r\n        <div className={classes.temps}>\r\n          {weatherData && <Temp temp={weatherData.main.temp - 273.15} />}\r\n          {weatherData && (\r\n            <FeelsLike feelslike={weatherData.main.feels_like - 273.15} />\r\n          )}\r\n          {weatherData && (\r\n            <MaxMin\r\n              max={weatherData.main.temp_max - 273.15}\r\n              min={weatherData.main.temp_min - 273.15}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className={classes.temps}>\r\n          {weatherData && <Humidity humidity={weatherData.main.humidity} />}\r\n          {weatherData && (\r\n            <Description description={weatherData.weather[0].main} />\r\n          )}\r\n          {weatherData && (\r\n            <Location\r\n              city={weatherData.name}\r\n              country={weatherData.sys.country}\r\n            />\r\n          )}\r\n        </div>\r\n        </Fade>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ApiFetch;\r\n","import React from \"react\";\r\nimport ApiFetch from \"../../../api/apifetch/apifetch\";\r\nconst Content = () => {\r\n  return (\r\n    <div>\r\n      <ApiFetch />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import React from 'react'\r\n//import classes from './layout.module.css'\r\nimport Title from './titlemenu/titlemenu';\r\nimport Content from './content/content';\r\nconst Layout = () => {\r\n    return (\r\n        <div>\r\n            <Title/>\r\n            <Content/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout\r\n","import React from 'react';\nimport './App.css';\nimport Layout from './components/layout/layout';\nfunction App() {\n  return (\n    <div>\n      <Layout/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentWrapper\":\"apifetch_contentWrapper__3-EDW\",\"temps\":\"apifetch_temps__2zAF5\",\"valueWrapper\":\"apifetch_valueWrapper__2B8CY\",\"inputBoxes\":\"apifetch_inputBoxes__1OyV0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"titlemenu_text__2jomX\",\"border\":\"titlemenu_border__3QRTt\",\"title\":\"titlemenu_title__3Kibc\",\"instruction\":\"titlemenu_instruction__2yIKc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"city\":\"styles_city__1kbWA\",\"cityStyles\":\"styles_cityStyles__3_RQk\",\"country\":\"styles_country__zffSn\",\"formControl\":\"styles_formControl__5y2tf\",\"button\":\"styles_button__1bFMu\",\"box\":\"styles_box__3O9rk\",\"boxwrapper\":\"styles_boxwrapper__1tcRe\",\"icon\":\"styles_icon__1jxa9\",\"text\":\"styles_text__3JLBb\",\"locationButton\":\"styles_locationButton__3T3f-\"};"],"sourceRoot":""}